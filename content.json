[{"title":"linux遇到的问题总结","date":"2020-03-14T00:56:29.000Z","path":"2020/03/14/2020031401/","text":"1、解决Nginx的connect() to 127.0.0.1:8080 failed (13: Permission denied) nginx 默认端口是8080，selinux安全默认是enforcing,所以关闭掉就ok了 2、服务器内存占用过高的问题排查 (1).用top 命令查看占用资源最多PID(进程)： (2).再用 top -H -p 1000 命令查看在这个进程中，消耗 cpu 最多 的线程，如 1003； (3).最后使用 jstack 1000 &gt; dump_file 把这个进程的堆栈信息 dump 到文件中， (4).打开 dump_file，找到 id 为1003的线程（要转化为16进制），就能发现是哪个方法占用了 cpu，分析自己的 代码;","tags":[{"name":"技术珠玑","slug":"技术珠玑","permalink":"http://caixw.cn/tags/技术珠玑/"}]},{"title":"To B Not to B","date":"2020-02-22T05:54:33.000Z","path":"2020/02/22/20200222/","text":"互联网浪潮正从过去的消费互联网向产业互联网转移，巨头们正在把“矛头”从C(消费者)端转向B(企业)端，他们希望越来越多的企业接入互联网，进行数字化和智能化改造，最终打造一个万物互联的新世界。 在兴奋与焦虑杂糅交错下，“下半场”正在成为传统互联网圈的核心话题。 传统互联网的上半场只是一场关于“消费互联网”的竞争，C（即Costumer，消费者）端的个人用户是巨头们争夺的核心目标，他们希望把每个人的生活线上化、数据化。于是，人们开始用手机买机票、打车、订酒店、聊天、购物、看新闻……而百度、腾讯、阿里等公司一跃成为巨头公司。 到了下半场，风口开始转向“产业互联网”，各行各业的企业(B端，即Business企业)成了传统互联网巨头们跑马圈地的对象。巨头们以科技赋能的名义，希望帮助企业进行业务模式、运营模式和商业模式的数字化、智能化变革。 制造、金融、医疗、汽车、物流、通信、交通、城市管理、政府服务……似乎每一个领域都是“想想就很激动”的万亿级市场。 “To B or Not to B”，正成为传统互联网巨头们的一个新命题。 市场的诱惑，BAT也要转型 其实，产业互联网并不是一个新鲜词。国内产业互联网领域早已聚集了一批先行者，如海尔、航天科工、三一重工、东土科技、和利时等等。工信部也早在2016年初就成立了工业互联网产业联盟。国际市场上，也有GE、西门子等先行者。这些国内外产业互联网先行者的技术和方案早已广泛应用于制造业、城市管理、医疗等诸多领域。 但对于最早起步于消费领域的传统互联网巨头们来说，产业互联网却是一片新的待开拓的疆土。 10月23日，腾讯公司掌舵者马化腾在知乎上提出了这样一个问题：未来10年哪些基础科学的突破会影响互联网产业？产业互联网和科技互联网融合创新，会带来哪些改变？此时距离马化腾上一次在知乎上提问已经过去6年，6年前他提出的问题是：整个人类处于互联网发展的哪个阶段?下一个10年，互联网升级的大致方向在哪里? 而在此之前的9月30日，即将迎来20周岁生日的腾讯宣布启动新一轮整体战略升级，并因此进行了一轮力度空前的业务架构调整。“扎根消费互联网、拥抱产业互联网”是此次调整的核心目标。 对此，马化腾表示，此次主动革新是腾讯迈向下一个20年的新起点。“这是一次非常重要的战略升级，互联网的下半场属于产业互联网，上半场，腾讯通过连接为用户提供优质服务，下半场我们将在此基础上，助力产业与消费者形成更具开放性的新型连接生态。” 不过，关于腾讯的此番大动作，更多的讨论来自——to B的时代是否来临？产业互联网浪潮真的已至？互联网下半场格局会如何变幻？其实，此前，这已经是科技圈和投资圈非常热门的话题。只不过，腾讯的高调入局，将这股潮流一下子推到更多人面前。 趋势未至，风投先行。我们之前曾报道过，很多投资机构已经开始重点关注to B类型的创业公司，尤其是那些真正拥有核心技术而非模式创新的创业企业。 “中国这几年一直在做‘互联网+’，这一方面是认可互联网本身发展的成果，另一方面也是希望互联网更多地去助力实体经济，成为经济发展新的驱动力。从消费互联网到‘互联网+’，再到现在的产业互联网，这其实是发展趋势。”百度云副总经理张志琦告诉我们。 事实上，中国的科技巨头们几乎都开始重估B端的价值。 “为什么大家现在都开始说要做to B？除了消费互联网结束、产业互联网开始这个讨论，更重要的是，全球产业格局已经发生了不可逆转的变化。”阿里巴巴集团副总裁刘松告诉我们。 在刘松看来，to B之所以成为热潮，一方面是移动互联网的C端人口红利释放殆尽，消费互联网的高速增长期即将过去，下一波红利将来自仍未爆发的产业互联网，而这将是一个比消费互联网大得多的巨量市场。“产业互联网的体量可能会是消费互联网的100倍。” 另一方面，随着中国经济的转型升级，越来越多的企业需要“更换引擎 ”，比如过去处于产业价值链底端的中国制造，但现在随着劳动力红利的消失和低端制造向东南亚转移，在产业价值上不断向上走的中国创造和中国智造，当然需要通过数字化转型和智能化变革来开发新的动能。 一边是在消费互联网领域蓄积了能力的互联网公司，一边是规模巨大又充满热切需求的企业，如果这两者碰撞会发生什么? 种种迹象表明，互联网浪潮正从过去的消费互联网向产业互联网转移，巨头们正在把“矛头”从C(消费者)端转向B(企业)端，他们希望越来越多的企业接入互联网，进行数字化和智能化改造，最终打造一个万物互联的新世界。 产业互联网的规模有多大? 根据普华永道发布的《科技赋能B端新趋势白皮书》预计，到2025年，T2B2C(编者注：T指科技，B指商家，C指用户)模式给科技企业带来的整体市值将高达40至50万亿元人民币。而中国移动互联网2018年的市场规模仅为8.42万亿元。咨询机构IDC的一项CEO调查也显示，在中国1000强企业中，有超过一半的企业已把数字化转型作为企业的战略核心，这为市场带来了巨大的想象空间。 从颠覆到赋能 “在互联网的上半场，互联网身上最显著的标签就是颠覆者，主角似乎都是互联网公司。但是到了下半场，互联网公司的角色会变为赋能者，主角则是传统企业，尤其是各个行业里的领军者，他们把行业经验和实践叠加到互联网的技术和能力之上，通过完成数字化转型和智能化变革，形成新的核心竞争力。”张志琦表示。 无论是阿里、腾讯、百度，还是华为、金山、浪潮，征战数字化转型和智能化变革市场的先锋，都是云业务。 因为“云是数字经济最重要的基础设施”“云形态的数据中心会超越传统数据中心”“云将成为人工智能的最强载体”……无论是定义未来的人工智能，还是万物互联的IoT，抑或是未来石油的大数据，都要基于云去发展演进。“产业互联网也好，数字经济也好，智能化也好，底座都是云。”刘松表示。 “要实现数字化转型，传统企业的核心要点是在云上完成这次数字化的产业升级。”毕马威中国信息化咨询主管黄灏告诉我们，“过去10年，云服务商创造了很多企业数字化转型的成功案例，这将会激发整个行业对数字化和智能化的再认识。” “未来10年，中国传统大型企业将借助云，不断挖掘自身的潜能，向产业链的高端进发，实现自我超越，并在国际市场与对手展开更高层次的竞争，进而为中国下一个10年发展提供持续动能。”黄灏说。 据分析机构Gartner的统计数据，到2020年，通过5G网络相互连接的智能设备将达到500亿台IoT设备和77亿人，这将驱动大数据、云、人工智能、IoT、边缘计算等产业的普及和爆发。 to B有多难? 从历史上看，信息技术对B端企业的变革经历了两次浪潮。第一次是在上世纪70年代，以信息化和软件化为核心，诞生了SAP、微软、甲骨文等一批软件巨头。第二次是2000年左右，云计算兴起，企业开始纷纷上云，大数据、IoT（物联网）、人工智能开始与企业的业务深度结合，SaaS(软件即服务)模式大行其道。 “为什么中国的to B企业都活得这么惨？”美团点评创始人王兴曾经撰文提出了这个“很奇怪”的问题，并随后引发了热议。 王兴认为，中国科技公司往往被认为是把美国公司Copy to China，几乎每个领域的美国龙头企业都在中国有拥趸。但是，在to B领域，SAP、Salesforce、Workday，Oracle这些非常成功的公司，却没有做起来的中国版本，甚至都没有人去做。to B公司在美国占据了整个科技产业的半壁江山，中国科技圈却基本找不到，即使有活着的，也都活得很惨。 王兴认为，这背后深层次的原因是“成也人口、败也人口”。中国庞大的人口基数导致在中国做消费互联网，轻松就可以获得几千万甚至几个亿的用户;但是，也正因为人口众多，劳动力相对廉价，中国企业缺乏以技术提升效率的迫切需求，因此中国此前工业的信息化的紧迫性远不及人力成本高昂的欧美。 “过去，中国在国际分工里基本上在产业价值链的底端，它并不需要在知识和能力创造方面花太多的时间和成本。说得直白一点，美国、德国企业是头脑国，而中国的企业是躯干国。头脑国肯定需要花更多的钱去构建能力，所以欧美出现了一大批to B的大公司。而中国企业过去根本用不到，信息化也只是人财物管好就可以了，不用搞科技创新。企业不肯投钱，当然就养不大to B的公司。”刘松说。 B端市场——难啃的硬骨头 刘松透露，阿里很早就想做to B业务，阿里云的前身其实就是阿里软件，但在2008年就失败了。“当时因为产业条件还不具备，没有今天消费互联网形成的大的技术环境和平台，生不逢时。2009年，阿里决定做云计算，从小B开始，2014年以后开始做大B，就是所谓数字化转型这个概念。” 但是，即使现在潮头已至，仍然不能说坦途一片。刘松和张志琦都坦言，在业务推进中，在与传统企业的沟通合作中，还有很多障碍和误解需要破除。 “一方面，就像10年前做电商一样，很多企业都在观望，因为有太多的不确定性，比如到底能不能最终受益。另一方面，电商是互联网比较上层的应用，还比较好理解，但大数据、人工智能都是技术门槛非常高的，要复杂得多。现在有很多企业的领导把智能化写进企业的战略甚至价值观里面，但是当真的要落地的时候，就感觉很难。这种不了解也会导致客户把科技想得太科幻，很多时候，他们把人工智能等同于科幻。”张志琦说。 “互联网与产业的跨界合作，最难的也是最重要的就是建立信任。阿里之前用过资本的形式，通过利益共享来建立信任。但其实，应该有多种形式，不完全是一定要有资本。”刘松说。 刘松还特别强调消费互联网是产业互联网的前奏，两者并不是取代关系。“C端市场为B端市场培养了用户，沉淀了技术。未来C端和B端会进一步打通，比如C2M模式、淘工厂都是在做这样的事情。”腾讯公司相关负责人也对我们表示，在帮助传统企业数字化、智能化转型中，确实会遇到很多障碍和难题，最突出的就是观念上。 “数字化、智能化转型并不是一蹴而就的。数字驱动不仅仅是IT问题，不是只是用信息技术支撑企业业务发展，而是企业的战略问题，涉及到企业核心能力的重构。要推进企业在战略层面和业务层面的动力转型和创新发展，是需要换发动机的。” 腾讯公司上述负责人说。 前景美好而诱人，但也存在一定的不确定性。因为to B和to C是两个完全不同的市场，产业互联网的B端市场的难度、复杂程度、产业周期都要远远高于消费互联网的C端市场。虽然整体市场规模更大，但与经常出爆款的C端市场不同，B端市场是苦活，是个难啃的硬骨头。 BAT等巨头如何抢食新蛋糕 在产业互联网时代，不会出现赢家通吃的现象，更不会是一个巨头时代，因为每个领域都有很强的垂直专业性，不可能哪一家公司解决所有问题。 面对早已抢先一步抢占产业互联网的海尔、三一、航天科工、东土科技等工业互联网先行者，传统互联网巨头们将如何分割这一巨大蛋糕？ 腾讯架构大调整 9月30日，为了“扎根消费互联网、拥抱产业互联网”，腾讯将原有的七大事业群(BG)重组整合为六大事业群。 其中最受关注的当数新成立的云与智慧产业事业群(CSIG，即Cloud and Smart Industries Group)，这意味着，腾讯董事会主席兼首席执行官马化腾屡次对外透露的腾讯对产业互联网的野心，有了新进展，它将成为腾讯to B业务的主阵地。 “一个可见的趋势是，消费互联网市场趋于稳定，市场机会正在向产业互联网迁移。腾讯的战略升级和架构调整，正是基于此进行的前瞻思考和主动进化。”腾讯CSIG相关负责人告诉我们。 据腾讯上述负责人介绍，在调整后的新组织架构中，CSIG将负责公司云平台和智能产业关联业务的发展。 在下一个智能时代，腾讯对自己新的定位是：“各行各业的数字化助手”。“腾讯希望利用云、支付、AI、安全、LBS等基础设施赋能产业合作伙伴，搭建新一代的智能产业生态。把10亿级的用户和专业的产业服务对接起来，帮助传统行业实现智能化、数字化，对用户和行业都将产生巨大的价值。”该负责人表示。 在BAT中，腾讯被业界普遍认为是最没有to B基因的，在游戏业务受挫、股价不断下跌的背景下，腾讯能否讲好这个to B的新故事?能否靠B端发力实现惊人逆转还有待观察。 作为曾经的“亚洲股王”，腾讯的股价今年以来已经从高点跌掉了四成，且跌幅要远大于阿里巴巴和百度。过度依赖游戏业务一直是外界对腾讯发展前景质疑的焦点，而占据营收近一半的游戏业务又因审批收紧而屡遭重创。尽管从公司的基本面看，腾讯依然拥有超高的增速和巨量的营收，但一些投资者表示已经看不清腾讯的未来。 张志东，曾任腾讯公司CTO，是腾讯公司主要创办人、腾讯五虎将之一，马化腾的QQ号是10001，而他的是10002。2014年，张志东退居二线，至今，腾讯仍然没有新的CTO。没有CTO、没有技术领军人物，腾讯因此颇受质疑：腾讯技术建设是否落后同体量的其他公司? 张志东在此前的一次内部分享中，曾直言腾讯存在的一些问题。 一是组织变革的滞后。为了从PC时代过渡到移动互联网时代，腾讯在2011年到2012年间进行过一次大规模的架构调整，而现在ABC(AI人工智能+Big Data大数据+Cloud云)时代已经到来，但腾讯现有的团队组织建设并没有跟上。 二是数据中台建设缺课。腾讯内部著名的“赛马机制”是腾讯提升创新力的重要手段，QQ秀、微信、《王者荣耀》等很多成功的产品都是从这个制度里跑出来的。但是，这也是一把双刃剑，会出现许多“重复发明轮子”的现象，各个部门之间常常是竞争关系大于合作关系，尤其是在大数据的应用上，会带来很重的数据墙和组织墙。 “这二者互为因果，弄不好会形成恶性循环。”张志东说。 而从此次的架构调整看，腾讯也确实着重在解决这两个问题。 对于腾讯究竟有没有to B的基因?早在2017年12月，腾讯公司总裁刘炽平曾在员工大会上表示：“很多人说我们只有to C的基因，没有to B的基因，我是不相信这个说法的，你看进化中的成功物种，不是一开始就有那种基因，都是演化出来的。” 对于外界的疑虑，腾讯方面的负责人也表示，很多产业有to B和to C等综合性需求。腾讯一直在探索一套融合腾讯优势的特色打法，形成一个2C2B的智慧产业生态。 “许多关键产业最终的服务对象不也是人嘛，而腾讯在移动互联网的优势，是可以转化为B端业务的核心竞争力的。腾讯有接近11亿的庞大用户基础以及服务这些用户的积累，这些在互联网上半场储备的经验和优势，将成为我们迎战互联网下半场的利器。腾讯希望推动C和B两端更彻底地连接，并以此形成新型业务生态，这也是全球经济发展的新趋势之一。”该负责人说。 马云提出“新制造” 在2016年的云栖大会上，马云提出了以“新零售”为代表的“五新”战略。业界纷纷探讨，就像新零售重塑零售业一样，新制造会不会为制造业带来变革。 马云认为，新制造就是用好互联网、云计算、IoT、人工智能、大数据，未来制造业是Made in Internet。现在不加速变革的企业，在未来10~15年会哭天喊地。“我们提出新制造，不是阿里巴巴要进军制造业，而是要帮助制造业进行变革。” “中国制造业如果能提升1%的良品率，就意味着一年内可以增加上万亿元的利润。”阿里云总裁胡晓明表示，希望利用人工智能技术发挥这1%的威力。 不过，对马云的新制造，学界和商界有不少质疑甚至批驳。例如娃哈哈集团创始人宗庆后、富士康集团董事长郭台铭等就认为马云的“新制造”只是一个噱头，并没有什么新意。国务院发展研究中心研究员李广乾也指出，马云提出的“新制造”并没有多少新的内容，充其量也就是对国内外制造业最新发展趋势的概括而已。 但无论如何，阿里云在产业互联网领域的布局已经开始了。 就像天猫是阿里巴巴“新零售”的基座，“新制造”的主攻手则是阿里云。阿里云于2009年9月成立。阿里云的成立最初是为了满足阿里巴巴自身业务发展的需要，经历过双11绝无仅有的数据压力考验，以及蚂蚁金服稳定性和安全性要求的磨炼，阿里云逐渐发展成为领先的云平台。 阿里巴巴2019财年Q1财报显示，云计算营收增速最快，高达93%。在总营收占比达到5%。而在过去的3年里，阿里云每个季度都以超过100%的速度在增长。阿里云因此被外界视为阿里巴巴最有前景的业务之一。 对照云计算业务对亚马逊、微软的业绩和估值的影响，微软公司CEO萨提亚·纳德拉通过“刷新”战略发力云计算，让微软完成华丽转身重回巅峰;亚马逊市值冲破万亿美元，云计算功不可没，因为亚马逊已经一多半利润都来自云计算，预计到2024年，亚马逊云业务价值将超过亚马逊的市值。 在满足自身需求的同时，阿里云也开始了对外赋能。根据阿里云公布的数据，目前，阿里云的合作伙伴数量已超过8000家，服务客户超过10万家，云市场的订单总数突破200万，合作伙伴的业务增长率达到450%。 根据市场研究机构IDC发布的报告，2017年，阿里云在公有云领域遥遥领先，占据了45.5%的市场份额;腾讯占比10.3%，位列第二;金山云、中国电信和亚马逊分列第三到五位。而在全球市场，根据全球知名市场研究机构Gartner发布的2017年度全球公有云市场分析报告，亚马逊AWS、微软Azure、阿里云位列全球公有云市场前三。 2017年，阿里云正式发布了面向特定行业的智能化解决方案——ET大脑。目前已广泛应用到工业、城市、农业等多个领域。 但这一切并不容易，很多传统企业，尤其是工业农业企业，最初并不相信云、大数据、IoT、人工智能等新一代信息技术能帮助到他们。 为了说服企业，阿里云采取了按效果付费的方式。阿里巴巴集团副总裁刘松告诉我们，“这其实有点儿像双方对赌，比如，我们帮你省了一个亿，我会有一个分成，但如果达不到目标效果，客户就不用付钱。”刘松表示，这样的模式在工业大脑里面已经有好几个成功的案例。 百度： AI to B “All in AI”，百度是最先高调宣称全面进军人工智能的互联网巨头。而百度的“B计划”也是从AI切入的。 百度掌舵者李彦宏表示，人工智能正在从生态布局到落地加速，百度将率先吹响AI产业化号角。百度已经是全球AI应用范围最广的公司，已经在三大产业的15个行业得到应用，并在to B企业市场上取得了重大进展。 百度的AI战略目前主要落地方向有三方面：一是Apollo无人驾驶汽车生态;二是人工智能操作系统DuerOS;三是ABC云，即AI人工智能+Big Data大数据+Cloud Computing云计算。Apollo和DuerOS已经全面开放，与云业务一起构成百度的AI战略架构。相比其他巨头，百度更早表现出了对产业互联网的兴趣，并率先发布AI to B平台，百度希望借AI打一个翻身仗。 “人工智能对于B端的生态改变是非常明显的。无论是金融还是房产，无论是教育还是医疗，无论是能源还是物流等等，每一个方面，人工智能都有非常多的应用。”李彦宏说。 实际上，百度是BAT中最有to B气质的，其大部分营收也都是来自B端。“中国80%的企业最初开始触网建站，到后来进行营销推广，都是在百度的生态体系当中。”百度云副总经理张志琦告诉我们。 在张志琦看来，从算法到算力，到AI应用的场景落地，再加上企业中间的一些实践经验，这构成了整个产业互联网布局。而百度的优势在于搜索引擎本身对于技术上的要求很高，百度已经做了大量的技术积累和沉淀。 他认为，百度云区别于其他公司的地方在于融合了AI、大数据的技术能力，再通过云的载体进行输出和赋能。能给企业带来的价值不仅只是IT成本的降低或效率的优化，而是通过智能化帮助企业提高生产效率，创造更多商业机会。 据张志琦介绍，随着百度云生态计划的加速落地，百度云目前的合作伙伴已突破1000家。 华为：“起大早，赶晚集” 相对于BAT等互联网公司，华为绝对是有to B基因的，B端的客户数量也是BAT无法匹敌的。但是，在云和AI这两件事上，华为似乎姗姗来迟，甚至有评论调侃：“都不慢半拍、慢一拍，而是慢了两拍。这非常不华为呀。” 但10月10日，华为云刷屏了。 华为公司轮值董事长徐直军在华为HC大会上“随手”掏出了华为研制的人工智能芯片，而且还是两颗：昇腾310和昇腾910。造芯片并非易事，上百亿的研发投入，数年的研发积累，先做再说，倒是很华为。 “华为的芯片已经超越目前最先进芯片——英伟达公司产品性能的两倍。”徐直军说。研制芯片不仅意味着核心竞争力的构筑，也意味着人工智能成本的大幅降低。 同时，徐直军还首次系统地对外阐述华为的AI战略,即投资基础研究、打造全栈方案、投资开放生态和人才培养、增强解决方案、提升内部效率五大发展战略。他还宣称，华为云将全面AI化，未来三年将向云计算投资10亿元。 事实上，华为在云领域算是“起了个大早，赶了个晚集”。早在2007年，华为就成立了聚焦云计算的虚拟化研究部，2011年，华为云正式成立。但直到去年，华为创始人任正非签发的一份“关于Cloud BU组织变动的通知”正式揭开了华为云业务的面纱，华为云正式成为华为的一级部门。 作为战略业务，华为云身上的担子并不轻，华为内部人士的说法是“三年赶超阿里，跻身世界云五强”。一年来，华为成为云计算产业的一匹黑马，华为云业务今年上半年收入同比增长了7倍。华为方面表示，希望2020年华为云能贡献超过100亿美元。 外界认为，华为很可能成为中国云计算产业的后来居上者，直接威胁阿里巴巴的领先地位。","tags":[{"name":"资讯","slug":"资讯","permalink":"http://caixw.cn/tags/资讯/"}]},{"title":"这短短的一生我们最终都会失去","date":"2020-02-02T09:23:14.000Z","path":"2020/02/02/20200202/","text":"所有的一切终将逝去，人生就是一个从生到死的过程。 中间的路如何走，全凭个人选择。 我们从出生嗷嗷待哺开始，翻身，爬行，咿呀学语，蹒跚学步，尿床，摔跟头，自己吃东西，奔跑； 从幼年到童年，断奶，和小伙伴玩，打架和好，上幼儿园，上小学； 从童年到少年，学习成长，不断地学习各种知识； 从少年到青年，开始有选择的学习，了解自己的喜好，开始表现出自己独一无二的人格，学校毕业，开始工作，结婚生子，买房买车； 从青年到中年，人生已过半，有了自己的一套人生处事原则； 从中年到老年，退休了，忙了半辈子也该歇歇了，锻炼身体，培养爱好； 从老年到暮年，走不动了，看不清了，也听不见了，吃饭穿衣都费劲了，快不行了，不说了要挂了。 人的一生犹如四季轮回，春生，夏长，秋衰，冬亡。 犹如草木枯荣，犹如太阳东升西落。 人这短暂的一生，在宇宙的岁月中如白驹过隙，弹指烟消云散。 人类很渺小，生命很短暂。 但生而为人，我们有自己的想法，要活成自己想要的样子。不辜负爱，不辜负青春，不辜负生命。 这短短的一生 我们最终都会失去 你不妨大胆一些 爱一个人，攀一座山，追一个梦……","tags":[{"name":"感悟","slug":"感悟","permalink":"http://caixw.cn/tags/感悟/"}]},{"title":"Error creating bean with name 'eurekaAutoServiceRegistration'的原因分析","date":"2019-12-28T09:17:09.000Z","path":"2019/12/28/2019122801/","text":"启动微服务的时候，突然报这个服务，错误如下： org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name ‘eurekaAutoServiceRegistration’: Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)有如下原因如下： (1) 同一个服务重复启动了；（2）端口被其他应用占用了； 解决办法：（1）参考http://www.itersblog.com/archives/29.html；（2）https://github.com/spring-cloud/spring-cloud-netflix/issues/1952#issuecomment-355487342","tags":[{"name":"技术研究","slug":"技术研究","permalink":"http://caixw.cn/tags/技术研究/"}]},{"title":"PMBOK基本概念","date":"2019-12-16T03:19:41.000Z","path":"2019/12/16/2019121601/","text":"项目管理协会(PMI)定制了项目管理知识体系的图表和词汇标准；知识体系 (BOK) 包括已发布和未发布的材料，这一知识体系仍在不断演变发展；本《PMBOK®指南》 收录项目管理知识体系中被普遍认可为“良好实践”的那一部分；本指南基于《项目管理标准》；本指南的范围仅限于项目管理领域，而不涉及任何项目组合、项目集和多个项目的领域；通用词汇是专业学科的基本要素。全球项目管理业界定义的最重要的价值 观是责任、尊重、公正和诚实，这是《道德与专业行为规范》的最重要的规范；项目是为创造独特的产品、服务或成果而进行的临时性工作。","tags":[{"name":"技术","slug":"技术","permalink":"http://caixw.cn/tags/技术/"}]},{"title":"https的简单使用","date":"2019-12-11T11:22:02.000Z","path":"2019/12/11/20191211/","text":"1、https与http的区别https相比http 多了一安全Security层，双方的传输通过对称加密传输；传输的数据不被窃取和篡改； 2、https的实现原理 (1) 客户向服务端发送一个空的https请求；服务端返回CA证书（包含有公钥）；（2）客户端验证CA证书的有效性，如果有效，执行下一步；（3）客户端生成一个随机数；通过公钥加密这个随机数，发送给服务端；（4）服务端通过公钥对应的私钥解密获取随机数；（5）服务端和客户端通过这个随机数的对称加密传输数据； 3、由http 切换到https (1) nginx重定向 ` server { listen 80; server_name docs.lvrui.io rewrite ^(.*)$ https://$host$1 permanent; # return 302 https://$host$request_uri; } server { listen 443 ssl; server_name docs.lvrui.io; index index.html index.htm; access_log /var/log/nginx/docs.log main; ssl on; ssl_certificate /etc/ssl/docs.20150509.cn.crt; ssl_certificate_key /etc/ssl/docs.20150509.cn.key; error_page 404 /404.html; location / { root /var/www/html/docs; } } ` （2）index刷新重定向 &lt;html&gt; &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=https://docs.lvrui.io/&quot;&gt; &lt;/html&gt; server { listen 80; server_name docs.lvrui.io; location / { # 将 index.html 文件放到下面的目录下 root /var/www/html/refresh/; } } server { listen 443 ssl; server_name docs.lvrui.io; index index.html index.htm; access_log /var/log/nginx/docs.log main; ssl on; ssl_certificate /etc/ssl/docs.20150509.cn.crt; ssl_certificate_key /etc/ssl/docs.20150509.cn.key; error_page 404 /404.html; location / { root /var/www/html/docs; } }","tags":[{"name":"技术","slug":"技术","permalink":"http://caixw.cn/tags/技术/"}]},{"title":"2019120201","date":"2019-12-01T23:58:36.000Z","path":"2019/12/02/2019120201/","text":"nacos 的初探1、为什么要使用nacos(1) eureka服务从2.0开始不在维护了，后期升级和维护困难;(2) nocos支持的服务更多，包括基于DNS和基于RPC的服务，提供实时的健康检查；(3) 更适应于云服务架构，支持多租户和多环境； 2、服务发现 Dynamic Service Discovery is key to service-centric (for example microservice or cloud-native) architectures. Nacos supports both DNS-based and RPC-based (Dubbo, gRPC) service discovery, and provides real-time service health checks to prevent routing requests from being sent to unhealthy hosts or service instances. With Nacos, you can also implement circuit breakers for your services with ease. 3、服务配置Dynamic Configuration Service allows you to manage configurations in all environments in a centralized, externalized, and dynamic approach. Dynamic configuration saves you from redeploying your applications and services when configuration is updated. You can implement stateless services and achieve on-demand scaling effortlessly.","tags":[{"name":"技术","slug":"技术","permalink":"http://caixw.cn/tags/技术/"}]},{"title":"20191126","date":"2019-11-26T15:36:47.000Z","path":"2019/11/26/20191126/","text":"关于Linux的定时更新时间配置1、直接命令：crontab -e====2、vim /etc/crontab加入配置：*/1 * * * * /usr/sbin/ntpdate 0.asia.pool.ntp.org3、为了开机自启动，命令：vim /etc/rc.d/rc.local 加入以上命令","tags":[{"name":"技术","slug":"技术","permalink":"http://caixw.cn/tags/技术/"}]},{"title":"认识spring","date":"2019-11-22T03:40:31.000Z","path":"2019/11/22/2019112201/","text":"spring的发展spring 作为java服务器端开发的事实标准，有着巨大的优势，他对标的是EJB,为开发企业级应用提供一站式解决方案，核心思想是对象之间的依赖管理由容器来管理，为此其核心技术是bean 容器，ioc和aop。为了简化对spring 的使用，springboot ,它简化了配置，只需很少的处理就可以运行微服务，达到开箱即用的效果。为了更好的开发分布式应用，spring cloud应运而生，它集合了注册和发现，服务熔断和负载均衡等核心组件；万物互联等时代开始来临，Spring cloud data flow 目标是connect anything。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"diskpart的使用","date":"2019-09-03T14:17:45.000Z","path":"2019/09/03/2019090301/","text":"mount a disk to another disk&gt; diskpart &gt; list vol /*list all volume*/ &gt; select vol=3 &gt; remove &gt; assign mount=c:\\mnt /*vol=3 mount to c:\\mnt*/ remove mount&gt; diskpart &gt; list vol &gt; remove mount=c:\\mnt &gt; select vol=3 &gt; assign mount=f:","tags":[]},{"title":"springboot调度任务","date":"2019-03-24T08:39:30.000Z","path":"2019/03/24/2019032402/","text":"基于注解配置 - @EnableScheduling 开启调度 @EnableAsync 开启异步线程 public class EnvironmentTestController { /@Scheduled(cron = &quot;*/5 * * * * ?&quot;) 单位为毫秒数 @Scheduled(fixedRate = 5000) 可以设置固定间隔毫秒数 @Async 开启多个任务的时候，多个线程处理 public void printCount(){ System.out.println(Thread.currentThread().getName()); //System.out.println(&quot;Count:&quot;+Count); } } cron 表达式 Cron表达式参数分别表示： 秒（0~59） 例如0/5表示从零开始，每隔5秒分（0~59）时（0~23）日（0~31）的某天，需计算月（0~11）周几（ 可填1-7 或 SUN/MON/TUE/WED/THU/FRI/SAT）表示任意？表示不确定n/m 表示从n开始，每隔m@Scheduled：除了支持灵活的参数表达式cron之外，还支持简单的延时操作，例如 fixedDelay ，fixedRate 填写相应的毫秒数即可。每隔一分钟： 0/1 * ？","tags":[]},{"title":"jconsole 查看springboot 项目","date":"2019-03-24T01:19:11.000Z","path":"2019/03/24/2019032401/","text":"需要在启动参数里配置如下： -Dcom.sun.management.jmxremote.authenticate=”false” -Dcom.sun.management.jmxremote.ssl=”false” -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=”6017” ctrl+r启动 jconsole ,如下图所示： – 登录界面 – 登录后的面板","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"读《深入理解Java虚拟机》有感之4","date":"2019-02-20T11:50:05.000Z","path":"2019/02/20/20190220love/","text":"对象的创建 （1）虚拟机遇到new的指令时，首先从常量池查看是否有类的常量符号引用，并且检查这个符号引用代表的类是否已经加载，解析和初始化过，如果没有的话，就会启动类的加载。在类加载检查通过后，接下来虚拟机为新生的对象分配内存，分配内存的过程就是在堆中划分一块内存出来。为了加快对象的内存分配，防止指针的不安全，通常是使用TLAB（本地线程缓冲），可以使用参数-XX:+UseTLAB设置。 （2）内存分配完成后，虚拟机需要保证将分配的内存空间都设置为零值（不包括对象头），这样即使没有初始化，也可以访问数据为零值； （3）接下来要是设置对象头，对象头内容有：元数据信息，对象的哈希码，对象的GC分代年龄等信息； （4）在上面完成之后，一个新的对象产生了，但是还没有init(),所有字段值为零；初始化之后就有值； 对象的布局 对象布局可以分为3部分：对象头，实例数据和对齐填充；（1） 对象头：一个为Mark world:hash,gc年代等数据，一个为类的指针，确定这个对象为那个类型的实例；如果是数组的话，还有一个字段存储数组长度；（2）实例数据，无论是从父类继承下来的，还是在子类中定义的，都需要记录起来；这部分存储顺序收到分配策略影响，Hotspot虚拟机默认的策略是相同宽度的字段总是被分配到一起，在此基础之上父类的字段出现在子类之前； （3）对象填充并不是必然存在的，也没有特殊的含义，只是起着占位符的作用，由于HotspotVM 内存管理系统的要求对象的起始地址必须是8字节倍数；所以没有对齐的，就需要补充。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"读《深入理解Java虚拟机》有感之3","date":"2019-02-14T14:52:09.000Z","path":"2019/02/14/20190214love/","text":"虚拟机栈 如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError 异常；如果虚拟机栈可以动态扩展，如果扩展时无法申请到足够的内存，就会抛出OutOfMemoryError异常。 本地方法栈 其作用与虚拟机栈基本相似，区别是虚拟机栈为虚拟机执行java方法服务，二本地方法栈则为虚拟机使用到Native方法服务；与虚拟机方法栈一样，本地方法栈也会抛出StackOverflowError和OutOfMemoryError异常。 Java 堆 Java堆主要为类和数组实例分配内存；如果堆是可以扩展的，如果堆中没有内存分配，并且堆也无法扩展时，将会抛出OutOfMemoryError异常； 方法区 该区又称”永久代”，主要存储已被虚拟机加载的类信息，常量，静态变量，JIT编译后的代码等数据。当方法区无法完成内存分配要求，也将抛出OutOfMemoryError异常。 运行时常量池 运行时常量池是方法区的一部分，用于存放编译期生成的各种字面量和符号引用。既然运行时常量池是方法区的一部分，自然就会收到方法区内存的限制，当常量池无法再申请到内存时会抛出OutOfMemoryError异常。 直接内存 直接内存是jvm之外的内存，受到本机内存的限制，如果分配的内存无法满足时，就会抛出OutOfMemoryError异常。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"读《深入理解Java虚拟机有感》之2","date":"2019-02-12T14:21:29.000Z","path":"2019/02/12/20190212love/","text":"java把内存的分配和回收交给了虚拟机，工程师不用自己手动释放内存，这样就带来了一个不好的事情，一旦发生内存异常和溢出，如果对jvm内存原理不够精通的话，排查问题就是一件痛苦的工作。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"读《深入理解Java虚拟机有感》之1","date":"2019-02-11T13:33:58.000Z","path":"2019/02/11/20190211love/","text":"理解java虚拟机的理由 (1) 理解jvm运行原理，可以编写高质量的代码。 (2) jvm 接管了内存，好处是可以不用担心内存释放的问题，但是出现内存泄漏的情况，就必须 深入理解jvm,才能更好的定位和解决问题。 (3) jvm 未来朝着模块化和支持多核方向发展，编写lamda函数式编程可以更好的支持多核，理解jvm 有助于知其然，知其所以然。 (4) 目前显卡的算术运算能力，并行能力已经远远超过了CPU，在图形领域以外发掘显卡的潜力是近几年计算机发展的方向之一。Java的项目Sumatra就是提供GPU和APU运算能力的工具，以后她将直接提供java语言层面的API。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"经典老歌，久听不厌","date":"2019-01-10T13:48:11.000Z","path":"2019/01/10/jingdianlaogefor20190110/","text":"","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"读《从0开始学架构》有感-开篇","date":"2018-06-24T07:50:51.000Z","path":"2018/06/24/2018062401/","text":"每个人程序员都有一个架构师梦想，但是梦想是美好的，现实却是残酷的。 架构没有想象中的简单，它有几个特性：1、架构设计的思维和程序设计的思维差异很大 架构设计的关键思维是判断和取舍，程序设计的关键思维是逻辑与实现。要从程序员转变成架构师，就必须转变思维；同理穷人和富人的思维也不同，要成为富人必须有富人的思维。 2、架构设计没有体系化的培训和训练机制 大学几乎没有架构设计的相关课程，也没有体系化的相关书籍，只能依靠自己摸索，效率低，容易采坑。 3、程序员对架构设计存在很大误区 要成为架构师必须要有很强的技术天分；架构师要有很强的创造力；架构设计必须要高大上才能体现架构师设计能力；架构一定要具备高可用、高性能…这些似似而非的误区。 通过学习《从0开始学习架构》，我可以收获： 清楚的理解架构设计的本质、概念、目的，避免架构师在实践过程中把握不住重点、分不清主次，眉毛胡子一把抓，导致架构设计的四不像。 掌握架构设计的通用原则，无论何种业务或技术，架构师在判断和选择的时候有一套方法论可以参考，避免架构设计举棋不定，或者拍脑袋式设计。 掌握标准的架构设计流程，即使是刚开始做技术架构，也能够按照架构一步一步设计出合适的架构，避免某些步骤缺失导致错误的架构设计。 深入理解已有的架构模式，做到架构特点快速挑选合适的模式完成架构设计，或者在已有的模式上进行创新，或者将已有的模式组合出新的架构。 掌握架构演进和开源系统使用的一些技巧。","tags":[]},{"title":"分库分表总结","date":"2018-06-17T02:29:37.000Z","path":"2018/06/17/201806171029/","text":"为什么要分库分表当存储数据过多，性能下降，无法满足正常的业务需求的时候，就需要将单个空间拆分成多个，分担单个个体的压力，缩短响应时间，提高性能。分库分表，顾名思义，是两个操作。分库，拆分成多个数据库，分表，拆分成多张表。常见方式有：单库单表-&gt;单库多表-&gt;多库多表。 如何进行数据拆分最简单的方式就是按照ID将数据分配到不同的库不同的表中。当你创建一条记录时，就会根据生成的ID计算这条数据放到哪个库哪张表里去。 分库分表路由规则假如有16个库（从00库到15库），每个库有64张表，那一共就是有1024张表（从0000-1023）对应的路由规则：dbRule=id%1024%64tbRule=id%1024那么对应的库为dbName_dbRule对应的表为：tbName_tbRule 常见的方式 简单ID取模 字符串hash取模 分表键的问题选择谁作为分表键，这涉及到数据库的可扩展性，是否便于查询，能够避免跨库事务等，如果数据老是落到特定的数据库表中，那就分库分表就没有意义了。这个问题没有明确的答案，必须根据实际业务来确定。建议分表键尽可能找到数据表中的数据在业务逻辑上的主体，并确定大部分的数据库围绕这个主体的数据进行。如果一个分表键无法解决，可以使用2个，尽量越少越好。 分库分表存在的问题 数据按照用户划分，就会造成跨库事务问题。 原来所有的单库单表的sql都要进行改造，加入appId分表键。 汇总分库分表的数据，要跨越多个库，是一个问题。","tags":[]},{"title":"Git的简单使用","date":"2018-06-04T14:43:16.000Z","path":"2018/06/04/20180604/","text":"###如果没有初始化的项目，可以通过以下步骤： $echo &quot;# kotlinPrimary&quot; &gt;&gt; README.md $git init $git add README.md $git commit -m &quot;first commit&quot; $git remote add origin git@github.com:williamcai663/$kotlinPrimary.git $git push -u origin master 这样就可以把项目推到库中并生成且提交到master ###如果存在一个库的项目，直接执行如下命令： $git remote add origin git@github.com:williamcai663/kotlinPrimary.git $git push -u origin master ###如果想从master上开一个develop分支，可以执行如下： $git checkout -b develop-b 的作用就是创建并切换到develop分支这个新开的分支并没有关联到远程分支，创建远程分支并提交到远程，执行 git push origin develop这样远程就有了一个分支，并且与远程的分支develop没有关联上，可以通过执行如下命令： $git branch --set-upstream-to=origin/develop develop","tags":[]},{"title":"ubuntu搭建elasticsearch和使用","date":"2018-05-06T06:53:26.000Z","path":"2018/05/06/20180506elasticsearch/","text":"參考 ：http://www.ruanyifeng.com/blog/2017/08/elasticsearch.html","tags":[]},{"title":"elasticsearch的安裝","date":"2018-05-05T13:58:46.000Z","path":"2018/05/05/20180505elasticsearch/","text":"– 1.检查jdk安装 执行命令：java -version如果有java相关信息，说明已经安装。如果没有安装的话，执行命令：yum -y install java-1.8.0-openjdk– 2.下载elasticsearch安装包 执行命令： wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/tar/elasticsearch/2.3.4/elasticsearch-2.3.4.tar.gz – 3.解压和配置elasticsearch 解压执行：tar -zxvf elasticsearch-2.3.4.tar.gz执行：cd elasticsearch-2.3.4 &amp;&amp; cd bin &amp;&amp; ./elasticsearch执行之后，会出现问题提示： Exception in thread &quot;main&quot; java.lang.RuntimeException: don&apos;t run elasticsearch as root. at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:93) at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:144) at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:285) at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:35) Refer to the log for complete error details. – 4.解决办法 需要创建elasearch用户和用户组创建组： groupadd elasearch创建对应的用户： useradd elasearch -g elasearch -p rootsearch回到elasticsearch-2.3.4的上级目录执行以下命令：chown -R elasearch:elasearch elasticsearch-2.3.4/切换到elasearch用户： su elasearch进入bin目录执行 ：./elasticsearch -d成功后，执行命令： curl localhost:9200,结果如下： { &quot;name&quot; : &quot;Thog&quot;, &quot;cluster_name&quot; : &quot;elasticsearch&quot;, &quot;version&quot; : { &quot;number&quot; : &quot;2.3.4&quot;, &quot;build_hash&quot; : &quot;e455fd0c13dceca8dbbdbb1665d068ae55dabe3f&quot;, &quot;build_timestamp&quot; : &quot;2016-06-30T11:24:31Z&quot;, &quot;build_snapshot&quot; : false, &quot;lucene_version&quot; : &quot;5.5.0&quot; }, &quot;tagline&quot; : &quot;You Know, for Search&quot; }","tags":[]},{"title":"互联网+和+互联网的理解","date":"2018-04-29T10:34:20.000Z","path":"2018/04/29/20180429/","text":"近年，“互联网+”成为了一个热门词，涌现出了很多互联网+企业，比如“互联网+零售”成就了淘宝和京东，“互联网+信息”成就了谷歌和百度、“互联网+内容”成就了乐视和优酷。现在“互联网+”已经被提升到了国家战略的高度、国务院也制定了“互联网+”行动计划，催生了各行各业的“互联网+”创新大潮。但是，如今的BATJ等互联网巨头已经非常强大，单一的“互联网+平台”模式很难生存和发展空间；相反，很多传统企业由于有实体和渠道支撑，业务向互联网延伸和模式创新就相对容易很多，因此，“+互联网”也就是“传统企业+互联网”成为了新的方向和潮流。但是传统企业互联网转型存在人才、技术及运营模式等方面的短板和不足，在转型的过程中，会遇到各种问题和挑战；因此需要搭建一个平台，通过这个平台实现互联网转型企业间的“分享、交流、合作”，即让转型成功的典范企业分享成功经验和问题挑战，转型企业之间能够通过这个平台进行更直接的交流和更有效的沟通，通过交流找到彼此之间的业务合作机会，从而促成这些企业之间的跨界合作。","tags":[]},{"title":"compiler error 解决办法","date":"2018-04-24T04:22:17.000Z","path":"2018/04/24/java-compiler-error/","text":"编译项目，报Error:java: Compilation failed: internal java compiler error。 原因是项目中jdk版本配置不一致，配成一致即可解决问题。 查看项目的jdk（Ctrl+Alt+shift+S） File -&gt;Project Structure-&gt;Project Settings -&gt;Project 查看工程的jdk（Ctrl+Alt+shift+S） File -&gt;Project Structure-&gt;Project Settings -&gt;module 查看idea中java配置（Ctrl+Alt+S） File -&gt;Settings&gt;Build,Execution,Deployment&gt;Compiler&gt;Java Compiler 报错的原因就在这里，idea软件环境中Java版本的配置和之前项目的配置不一样，设置成一样的即可解决该问题。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"intellij idea 2018 激活","date":"2018-04-24T04:18:22.000Z","path":"2018/04/24/active-idea2018/","text":"首次启动的时候，选择license server ，输入下方链接：http://xdouble.cn:8888/点击activate即可","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"阿里云ECS服务器java环境搭建","date":"2018-04-23T05:16:23.000Z","path":"2018/04/23/config-aliyun-ECS/","text":"jdk 配置 下载jdk 到指定的目录 /temp 解压到指定的目录：tar -zxvf jdk-8u161-linux-x64.tar.gz -C /usr/java 执行命令：cd /usr/java/jdk1.8.0_161 配置环境变量 ，执行 vim /etc/profile 在/etc/profile末尾加上 export JAVA_HOME=/usr/java/jdk1.8.0_161 export CLASSPATH=$JAVA_HOME/lib/ export PATH=$PATH:$JAVA_HOME/bin export JAVA_HOME PATH CLASSPATH 保存配置后，执行命令:source /etc/profile 查看是否jdk是否配置成功，执行命令：java -version 如果出现以下，说明配置成功。 tomcat安装和运行 下载apache-tomcat 到指定的目录 /temp 解压到指定的目录：tar -zxvf apache-tomcat-8.5.29.tar.gz -C /usr/tomcat 执行命令：cd /usr/tomcat/apache-tomcat-8.5.29 修改端口（也可以不操作），cd conf/,然后执行 vim server.xml,修改8080端口为9999，如下图： 启动tomcat 服务，执行命令 cd ../bin—&gt;./startup.sh 验证是否启动成功，执行命令：curl localhost:9999,如果正常返回html，说明成功了。 配置外网访问，需要在ECS配置入网规则，允许外网访问9999端口通过。操作过程： 控制台–&gt;实例–&gt;管理–&gt;本实例安全组–&gt;安全组列表–&gt;配置规则–&gt;入方向–&gt;添加安全组规则，如下图: 点击确定，添加安全组成功后，就可以通过外网ip:9999访问tomcat了。 mysql安装和配置 检查一下原来是否安装过mysql,执行命令：yum list installed |grep mysql,如果结果为空，说明还没有安装，如果已经安装了，就卸载重新安装。 下载mysql安装包，执行命令：rpm -ivh http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm 安装mysql,执行命令：yum install -y mysql-server,如果显示 Complete! 说明安装成功。 设置开机自启动服务：systemctl enable mysqld.service 查看开机自启动是否生效：systemctl |grep mysqld,如果显示如下内容，表示生效了 mysqld.service loaded active running MySQL Server 设置开启服务 systemctl start mysqld.service 查看mysql的root用户初始化密码：grep ‘temporary password’ /var/log/mysqld.log 登录mysql Server : mysql -uroot -pXXXXXX mysql 登录成功后，修改密码：mysql&gt;set PASSWORD=PASSWORD(‘new password’); 为root登录开启远程登录：mysql&gt;GRANT ALL PRIVILEGES ON . TO ‘root‘@’%’ IDENTIFIED BY ‘xxxxx’ WITH GRANT OPTION; 命令立即执行生效：mysql&gt;flush privileges; 查看mysql服务状态：systemctl status mysqld; 启动mysql服务：systemctl start mysqld; 停止mysql服务：systemctl stop mysqld; 通过本地的mysql客户端，例如navicat 连接ECS服务器上的mysql,需要配置入网访问规则，运行默认端口3306可以通过外网访问，设置参考tomcat配置规则。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"hexo deploy 提示 permission denied的解决方法","date":"2018-04-22T14:17:50.000Z","path":"2018/04/22/hexo-trouble/","text":"出现的问题 hexo deploy ,提示Error: Permission denied (publikey),如下图： 查看用户配置的ssh的public key 是否存在 执行命令： ssh -vT git@github.com,结果如下： 提示 permission denied 进入 cd ~/.ssh,查看没有 id_rsa id_rsa_pub ,所以需要生成public_key。 生成publish key 使用Git Bash生成新的ssh key。 $ cd ~ #保证当前路径在”~”下 $ ssh-keygen -t rsa -C “xxxxxx@yy.com“ #建议填写自己真实有效的邮箱地址 Generating public/private rsa key pair. Enter file in which to save the key (/c/Users/xxxx_000/.ssh/id_rsa): #不填直接回车 Enter passphrase (empty for no passphrase): #输入密码（可以为空） Enter same passphrase again: #再次确认密码（可以为空） 成功的生成如下提示： 添加 ssh key 到 Github 登录GitHub系统；点击右上角账号头像的“▼”→Settings→SSH and GPG keys→New SSH key进入c:/Users/xxxx_000/.ssh/目录下，打开id_rsa.pub文件，全选复制公钥内容。把复制的内容放入key中，Title 自定义，点击确定。 验证public key 是否生效 再次执行 $ ssh -vT “xxxxxx@yy.com“,成功了提示 success,效果如下：","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"放松心情的时候，可以听听","date":"2017-04-16T11:04:13.000Z","path":"2017/04/16/postFor2017041601/","text":"","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"阅读<淘宝技术这十年>的体会","date":"2017-04-16T08:47:39.000Z","path":"2017/04/16/postfor20170416/","text":"阅读《淘宝技术这十年》后，觉得正明对刚入行的技术人员的建议很中肯：找到自己感兴趣的，花时间投入进去，通过实践后的知识积累比只看书本有用得多。他还引用了荀子的一句格言：不闻不若闻之，闻之不若见之，见之不若知之，知之不若行之，其英文翻译为：I hear and I forget.I see and I remember.I do and I understand.阿里的正详，说的很有道理：一个人如果把做事、做成事作为主要目标，该他得到的东西，一定会顺理成章的、水到渠成的得到。但是如果把上升作为主要目标，做同样的事，结果就会完全不一样。一句话，你的心态会最终决定你的成就。阿里小马：个“一万个小时理论”，我觉得很正确，说的就是一个人必须经 过不断地练习，不断地遇到问题才能成长起来。当然，做的时候 要不断总结，写博客是一个很好的途径。","tags":[{"name":"心得体会","slug":"心得体会","permalink":"http://caixw.cn/tags/心得体会/"}]},{"title":"年轻程序员和大龄程序员","date":"2016-12-21T13:49:11.000Z","path":"2016/12/21/20161221post1/","text":"这个时代很残酷也相对公平，残酷的地方在于世界的变化之快容不得人有片刻懈怠，公平的地方在于：不论你是年轻还是年老，都要靠实力说话。那些被时代抛弃的永远都是跑得比较慢甚至在原地徘徊的人，即所谓工作十年却只有一年的工作经验。 年轻程序员的优势在于年轻和激情， 大龄程序员的优势在于阅历和经验。所以，年轻程序员不要有跨越年龄阶段的焦虑，大龄程序员也不要觉得年轻人抢了自己的饭碗。每个年龄段都要有自己要解决和面临的问题，认清自己内心真正的需求和渴望，再去寻找适合自己的栖身之欸打怪升级，才是当务之急。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"为博客绑定域名","date":"2016-12-19T15:25:02.000Z","path":"2016/12/19/post-20161219/","text":"今天从万网买了一个域名，配置了域名解析，指向了github Pages 库，但是通过域名登陆后，老是解析不成功，原因可能是没有实名认证，访问的域名被安全局锁定。没办法，最多要等3天，期待好消息。同时要感谢我的同事的帮助。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"纪念一下，第一次发博客","date":"2016-12-18T15:37:17.000Z","path":"2016/12/18/firstPoster20161218/","text":"个人的博客第一篇内容，mark 一下，希望以后继续坚持下去。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://caixw.cn/tags/随笔/"}]},{"title":"Hello World","date":"2016-12-18T10:56:40.000Z","path":"2016/12/18/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]